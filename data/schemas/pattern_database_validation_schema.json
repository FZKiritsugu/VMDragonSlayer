{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": ["version", "patterns", "metadata"],
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Semantic version of the pattern database"
    },
    "patterns": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["id", "name", "type", "category", "signature", "confidence"],
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[A-Z0-9_]+$",
            "description": "Unique identifier for the pattern"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Human-readable name for the pattern"
          },
          "type": {
            "type": "string",
            "enum": ["bytes", "regex", "yara", "opcode", "structural", "behavioral"],
            "description": "Type of pattern matching to perform"
          },
          "category": {
            "type": "string",
            "enum": ["vm_detection", "packer_detection", "obfuscation", "anti_debug", "anti_vm", "anti_analysis", "evasion"],
            "description": "Category of VM protection technique"
          },
          "subcategory": {
            "type": "string",
            "description": "Optional subcategory for more specific classification"
          },
          "signature": {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["bytes", "regex", "yara", "opcode", "structural", "behavioral"]
              },
              "pattern": {
                "type": "string",
                "description": "The actual pattern (hex bytes, regex, etc.)"
              },
              "rule": {
                "type": "string",
                "description": "YARA rule content for yara type"
              },
              "opcodes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of opcodes for opcode type"
              },
              "offset": {
                "type": "integer",
                "minimum": 0,
                "description": "Offset from beginning of file (optional)"
              },
              "section": {
                "type": "string",
                "enum": [".text", ".data", ".rdata", ".rsrc", "any"],
                "description": "PE section to search in"
              },
              "architecture": {
                "type": "string",
                "enum": ["x86", "x64", "arm", "arm64", "any"],
                "default": "any",
                "description": "Target architecture"
              },
              "case_sensitive": {
                "type": "boolean",
                "default": true,
                "description": "Whether pattern matching is case sensitive"
              }
            },
            "allOf": [
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "bytes"
                    }
                  }
                },
                "then": {
                  "required": ["pattern"],
                  "properties": {
                    "pattern": {
                      "type": "string",
                      "pattern": "^[0-9A-Fa-f? ]+$"
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "yara"
                    }
                  }
                },
                "then": {
                  "required": ["rule"]
                }
              },
              {
                "if": {
                  "properties": {
                    "type": {
                      "const": "opcode"
                    }
                  }
                },
                "then": {
                  "required": ["opcodes"]
                }
              }
            ]
          },
          "confidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Confidence score (0-100) for pattern reliability"
          },
          "severity": {
            "type": "string",
            "enum": ["low", "medium", "high", "critical"],
            "default": "medium",
            "description": "Severity level of the detected technique"
          },
          "description": {
            "type": "string",
            "maxLength": 500,
            "description": "Detailed description of what this pattern detects"
          },
          "references": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "URLs to documentation or research about this technique"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-z0-9_-]+$"
            },
            "description": "Tags for categorization and searching"
          },
          "vm_families": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "vmprotect", "themida", "enigma", "asprotect", "armadillo",
                "obsidium", "upx", "aspack", "pecloak", "generic"
              ]
            },
            "description": "Specific VM families this pattern targets"
          },
          "false_positive_risk": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "default": "medium",
            "description": "Risk of false positive matches"
          },
          "performance_impact": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "default": "medium",
            "description": "Performance impact of applying this pattern"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "When this pattern was created"
          },
          "updated": {
            "type": "string", 
            "format": "date-time",
            "description": "When this pattern was last updated"
          },
          "author": {
            "type": "string",
            "description": "Author of this pattern"
          },
          "version": {
            "type": "string",
            "pattern": "^\\d+\\.\\d+(\\.\\d+)?$",
            "description": "Version of this specific pattern"
          },
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Whether this pattern is currently enabled"
          },
          "experimental": {
            "type": "boolean",
            "default": false,
            "description": "Whether this pattern is experimental"
          }
        }
      }
    },
    "metadata": {
      "type": "object",
      "required": ["created", "version"],
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "When this pattern database was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "When this pattern database was last updated"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Version of this pattern database"
        },
        "author": {
          "type": "string",
          "description": "Author of this pattern database"
        },
        "description": {
          "type": "string",
          "description": "Description of this pattern database"
        },
        "license": {
          "type": "string",
          "description": "License under which patterns are distributed"
        },
        "total_patterns": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number of patterns in database"
        },
        "pattern_categories": {
          "type": "object",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "integer",
              "minimum": 0
            }
          },
          "description": "Count of patterns by category"
        },
        "compatibility": {
          "type": "object",
          "properties": {
            "vmdragonslayer_version": {
              "type": "string",
              "description": "Minimum VMDragonSlayer version required"
            },
            "schema_version": {
              "type": "string",
              "description": "Pattern database schema version"
            }
          }
        },
        "statistics": {
          "type": "object",
          "properties": {
            "avg_confidence": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "high_confidence_patterns": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of patterns with confidence >= 90"
            },
            "experimental_patterns": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of experimental patterns"
            }
          }
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "description": {
                "type": "string"
              },
              "license": {
                "type": "string"
              }
            }
          },
          "description": "Sources used to create this pattern database"
        }
      }
    }
  }
}

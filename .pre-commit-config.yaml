# Pre-commit hooks for VMDragonSlayer
# Install with: pre-commit install
# Run manually with: pre-commit run --all-files

repos:
  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-merge-conflict
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']  # Prevent files >1MB
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: debug-statements
      - id: name-tests-test
        args: ['--pytest-test-first']

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
            .*\.lock$|
            .*\.log$|
            .*\.pkl$|
            data/.*\.json$
          )$

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=88']
        exclude: |
          (?x)^(
            plugins/.*|
            data/.*
          )$

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '88']
        exclude: |
          (?x)^(
            plugins/.*|
            data/.*
          )$

  # Python linting
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.0.280
    hooks:
      - id: ruff
        args: ['--fix', '--exit-non-zero-on-fix']
        exclude: |
          (?x)^(
            plugins/.*|
            data/.*
          )$

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML, types-requests]
        exclude: |
          (?x)^(
            plugins/.*|
            data/.*|
            tests/.*
          )$

  # Security scanning with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: |
          (?x)^(
            tests/.*|
            plugins/.*|
            data/.*
          )$

  # Python dependency scanning
  - repo: local
    hooks:
      - id: pip-audit
        name: pip-audit
        entry: pip-audit
        language: system
        pass_filenames: false
        always_run: true
        args: ['--desc', '--format=text']

  # Notebook cleaning (if any notebooks are added)
  - repo: https://github.com/kynan/nbstripout
    rev: 0.6.1
    hooks:
      - id: nbstripout

  # Documentation checks
  - repo: https://github.com/pycqa/doc8
    rev: v1.1.1
    hooks:
      - id: doc8
        args: ['--max-line-length=88']
        files: \.md$

  # License header checking
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        files: \.py$
        args:
          - --license-filepath
          - LICENSE-HEADER.txt
          - --use-current-year
        exclude: |
          (?x)^(
            tests/.*|
            plugins/.*|
            data/.*|
            setup\.py$
          )$

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck
        files: \.(sh|bash)$

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yml]

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        files: Dockerfile.*

  # Check for git conflicts
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-merge-conflict

  # Custom hooks for VMDragonSlayer
  - repo: local
    hooks:
      - id: check-model-files
        name: Check for large model files
        entry: bash -c 'find . -name "*.pkl" -size +1M -not -path "./.*" && echo "ERROR: Large .pkl files found. Move to releases." && exit 1 || exit 0'
        language: system
        pass_filenames: false
        always_run: true

      - id: check-secrets-baseline
        name: Check secrets baseline exists
        entry: bash -c 'test -f .secrets.baseline || (echo "Run: detect-secrets scan --baseline .secrets.baseline" && exit 1)'
        language: system
        pass_filenames: false
        always_run: true

      - id: validate-security-docs
        name: Validate security documentation
        entry: bash -c 'test -f SECURITY.md && test -f CODE_OF_CONDUCT.md && test -f CONTRIBUTING.md || (echo "Missing required policy documents" && exit 1)'
        language: system
        pass_filenames: false
        always_run: true

# Configuration files for various tools

# Create .yamllint.yml
default_stages: [commit]
default_language_version:
  python: python3

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [pip-audit]  # Skip potentially slow/flaky hooks in CI
  submodules: false
